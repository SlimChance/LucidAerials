@import url("https://file.myfontastic.com/6EQyzGk385eGoJTU9Ke7e9/icons.css");
@import "bootstrap-compass";
@import "bootstrap";
@import 'animate.css';
@import '_vars';
@import 'common';
@import 'home';
@import 'videos';
@import 'pictures';
@import 'contact';

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
.browsehappy {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}
p {
    font-family: $roboto-font;
    font-size: 16px;
}
h2 {
    font-family: $lora-font;
    font-weight: bold;
}

body {
    width: 100%;
    height: 100%;
    position: relative;
    // background-color: #54728B;
    overflow: auto;
    background-color: white;
    margin: 0;
    padding: 0;
    // font-size: 62.5%;
    font-family: $sans;
}
.view {
    position: relative;
}
.header-nav {
    position: relative;
}

.busy {
    height: 100vh;
    width: 100vw;
    background-color: $light-blue;
    z-index: 1000;
}

@keyframes fade-in {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@keyframes fade-out {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

// Transformicons
.tcon {
  appearance: none;
  border: none;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  height: $tcon-size;
  transition: $tcon-transition;
  user-select: none;
  width: $tcon-size;
  background: transparent;
  outline: none;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  -webkit-tap-highlight-color: transparent;
  > * {
    display: block;
  }
  &:hover,
  &:focus {
    outline: none; // see issue #36 https://github.com/grayghostvisuals/transformicons/issues/36
  }
  &::-moz-focus-inner {
    border: 0;
  }
}
@mixin tcon-menu-lines {
  display: inline-block;
  height: ($tcon-size / 7);
  width: $tcon-size;
  border-radius: $tcon-menu-radius;
  transition: $tcon-transition;
  background: $tcon-menu-color;
}
.tcon-menu__lines {
  @include tcon-menu-lines;
  position: relative;
  &::before,
  &::after {
    @include tcon-menu-lines;
    content: '';
    position: absolute;
    left: 0;
    transform-origin: ($tcon-size / 14) center;
    width: 100%;
  }
  &::before {
    top: ($tcon-size / 4);
  }
  &::after {
    top: -($tcon-size / 4);
  }
  .#{$tcon-jstransform} & {
    transform: scale3d(.8, .8, .8);
  }
}
.tcon-menu--xbutterfly {
  width: auto;
  .tcon-menu__lines {
    &::before,
    &::after {
      transform-origin: 50% 50%;
      transition: top .3s .3s ease, transform .3s ease;
    }
  }
  &.#{$tcon-jstransform} {
    .tcon-menu__lines {
      background: transparent;
      &::before,
      &::after {
        top: 0;
        transition: top .3s ease, transform .3s .3s ease;
        width: $tcon-size;
      }
      &::before {
        transform: rotate3d(0, 0, 1, 45deg);
      }
      &::after {
        transform: rotate3d(0, 0, 1, -45deg);
      }
    }
  }
}
// see issue #7 https://github.com/grayghostvisuals/transformicons/issues/7#issuecomment-59813596
.tcon-visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  &:active,
  &:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
  }
}
.tcon-menu--xcross {
  width: auto;
  &.#{$tcon-jstransform} {
    .tcon-menu__lines {
      background: transparent;
      &::before,
      &::after {
        transform-origin: 50% 50%;
        top: 0;
        width: $tcon-size;
      }
      &::before {
        transform: rotate3d(0, 0, 1, 45deg);
      }
      &::after {
        transform: rotate3d(0, 0, 1, -45deg);
      }
    }
  }
}
.tcon-menu--arrow {
  width: auto;
  &.#{$tcon-jstransform} {
    .tcon-menu__lines {
      &::before,
      &::after {
        top: 0;
        width: ($tcon-size / 1.8);
      }
      &::before {
        transform: rotate3d(0, 0, 1, 45deg);
      }
      &::after {
        transform: rotate3d(0, 0, 1, -45deg);
      }
    }
  }
}
.tcon-menu--arrowup {
  width: auto;
  &.#{$tcon-jstransform} {
    @each $property, $value in $tcon-menu-arrowleft-transformation {
      #{$property} : #{$value};
    }
  }
}
@keyframes chevron-pulse {
  0%   { opacity: 0; }
  40%  { opacity: 1; }
  80%  { opacity: 0; }
  100% { opacity: 0; }
}
.tcon-svgchevron {
  height: $tcon-svgchevron-size;
  width: $tcon-svgchevron-size;
}
.tcon-svgchevron path {
  animation: chevron-pulse $tcon-svgchevron-timing infinite cubic-bezier(0.4, 0, 0.2, 1);
  fill: transparent;
  stroke: $tcon-svgchevron-color;
  stroke-width: $tcon-svgchevron-strokew;
}
@for $i from 1 through 3 {
  .tcon-svgchevron path.a#{$i} {
    animation-delay: -($i - ($i/2)) + 0.5s;
  }
}
.tcon-loader--spinner360 {
  border-radius: 80%;
  display: block;
  height: $spinner_size;
  width: $spinner_size;
  position: relative;
  animation: tcon-spin360 $spinner_speed linear infinite forwards;
  background: $spinner_bg;
  &:before,
  &:after {
    content: "";
    display: block;
    position: absolute;
  }
  &:before {
    border-radius: 0 $spinner_fill_radius $spinner_fill_radius 0;
    height: $spinner_size;
    width: 50%;
    top: 0; right: 0;
    z-index: 1;
    background: $spinner_color;
    background-image: linear-gradient($spinner_bg, $spinner_color);
  }
  &:after {
    border-radius: $spinner_radius;
    height: $spinner_inner_circle;
    width: $spinner_inner_circle;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
    background: $spinner_inner_bg;
  }
}
@keyframes tcon-spin360 {
  to {
    transform: rotate(360deg);
  }
}